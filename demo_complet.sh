#!/usr/bin/env bash
# demo_complet.sh - D√©monstration compl√®te de toutes les fonctionnalit√©s

set -e

echo "üç≥ Kitchen ML Planner v2.0 - D√©monstration Compl√®te"
echo "===================================================="
echo ""

# V√©rification de l'environnement
echo "üîß V√©rification de l'environnement..."
if ! command -v python &> /dev/null; then
    echo "‚ùå Python n'est pas install√©"
    exit 1
fi

pip install -q -r requirements.txt
echo "‚úÖ D√©pendances install√©es"
echo ""

# Cr√©ation des dossiers
mkdir -p data/{raw_plans,structured,embeddings,exports} templates static

# 1. G√©n√©ration des plans d'exemple
echo "üé¨ 1. G√©n√©ration des plans d'exemple"
echo "-----------------------------------"
bash demo.sh
echo ""

# 2. Construction de l'index
echo "üß† 2. Construction de l'index vectoriel"
echo "--------------------------------------"
python embeddings/build_index.py
echo ""

# 3. G√©n√©ration d'un plan personnalis√©
echo "ü§ñ 3. G√©n√©ration d'un plan personnalis√©"
echo "--------------------------------------"
python rag/generate_plan.py "Restaurant m√©diterran√©en moderne avec terrasse, sp√©cialit√© poissons grill√©s, 60 couverts, cuisine semi-ouverte"
echo ""

# 4. Validation de tous les plans
echo "‚úÖ 4. Validation qualit√© de tous les plans"
echo "-----------------------------------------"
python validate.py
echo ""

# 5. R√©paration automatique
echo "üîß 5. R√©paration automatique des probl√®mes"
echo "-----------------------------------------"
python repair_plans.py --all
echo ""

# 6. Visualisation 3D
echo "üèóÔ∏è 6. G√©n√©ration des visualisations 3D"
echo "--------------------------------------"
for plan in data/exports/plan_*.json; do
    if [ -f "$plan" ]; then
        echo "üé® Rendu 3D de $(basename "$plan")..."
        python render_3d.py "$plan" --multiple
    fi
done
echo ""

# 7. Export CAD
echo "üìê 7. Export CAD (DXF) de tous les plans"
echo "---------------------------------------"
python export_cad.py --all
echo ""

# 8. Estimation des co√ªts
echo "üí∞ 8. Estimation des co√ªts d√©taill√©e"
echo "-----------------------------------"
for plan in data/exports/plan_*.json; do
    if [ -f "$plan" ]; then
        echo ""
        echo "üí∂ Estimation pour $(basename "$plan"):"
        echo "======================================"
        python cost_estimation.py "$plan" | head -25
        echo ""
    fi
done

# 9. Analyse HACCP
echo "üè• 9. Analyse HACCP (conformit√© sanitaire)"
echo "-----------------------------------------"
for plan in data/exports/plan_*.json; do
    if [ -f "$plan" ]; then
        echo ""
        echo "üîç Analyse HACCP pour $(basename "$plan"):"
        echo "======================================="
        python haccp_analysis.py "$plan" | head -20
        echo ""
    fi
done

# 10. R√©sum√© des fichiers g√©n√©r√©s
echo "üìÅ 10. R√©sum√© des fichiers g√©n√©r√©s"
echo "---------------------------------"
echo ""

echo "üìä STATISTIQUES FINALES"
echo "======================="
json_count=$(ls data/exports/*.json 2>/dev/null | wc -l | tr -d ' ')
png_count=$(ls data/exports/*.png 2>/dev/null | wc -l | tr -d ' ')
dxf_count=$(ls data/exports/*.dxf 2>/dev/null | wc -l | tr -d ' ')

echo "‚Ä¢ Plans JSON g√©n√©r√©s: $json_count"
echo "‚Ä¢ Visualisations PNG: $png_count"
echo "‚Ä¢ Exports DXF: $dxf_count"
echo ""

echo "üìÇ FICHIERS DISPONIBLES"
echo "======================="
echo ""

if [ -d "data/exports" ]; then
    echo "üìÑ Plans JSON:"
    ls -la data/exports/*.json 2>/dev/null | awk '{print "   ‚Ä¢ " $9 " (" $5 " bytes)"}' || echo "   Aucun fichier JSON"
    echo ""
    
    echo "üé® Visualisations 2D:"
    ls -la data/exports/*.png 2>/dev/null | grep -v "_3d_" | awk '{print "   ‚Ä¢ " $9 " (" $5 " bytes)"}' || echo "   Aucune visualisation 2D"
    echo ""
    
    echo "üèóÔ∏è Visualisations 3D:"
    ls -la data/exports/*_3d_*.png 2>/dev/null | awk '{print "   ‚Ä¢ " $9 " (" $5 " bytes)"}' || echo "   Aucune visualisation 3D"
    echo ""
    
    echo "üìê Exports CAD (DXF):"
    ls -la data/exports/*.dxf 2>/dev/null | awk '{print "   ‚Ä¢ " $9 " (" $5 " bytes)"}' || echo "   Aucun export DXF"
    echo ""
fi

echo "üåê INTERFACE WEB"
echo "==============="
echo ""
echo "L'interface web est disponible via:"
echo "   python start_web.py"
echo ""
echo "Fonctionnalit√©s web:"
echo "‚Ä¢ G√©n√©ration interactive de plans"
echo "‚Ä¢ Visualisation en temps r√©el"
echo "‚Ä¢ T√©l√©chargement des r√©sultats"
echo "‚Ä¢ Validation automatique"
echo ""

echo "üéØ COMMANDES UTILES"
echo "=================="
echo ""
echo "Interface web:"
echo "   python start_web.py"
echo ""
echo "Pipeline complet:"
echo "   ./run_complete.sh"
echo ""
echo "G√©n√©ration personnalis√©e:"
echo "   python rag/generate_plan.py \"Votre description\""
echo ""
echo "Validation:"
echo "   python validate.py"
echo ""
echo "R√©paration:"
echo "   python repair_plans.py --all"
echo ""
echo "Export CAD:"
echo "   python export_cad.py data/exports/mon_plan.json"
echo ""
echo "Visualisation 3D:"
echo "   python render_3d.py data/exports/mon_plan.json --multiple"
echo ""
echo "Co√ªts:"
echo "   python cost_estimation.py data/exports/mon_plan.json"
echo ""
echo "HACCP:"
echo "   python haccp_analysis.py data/exports/mon_plan.json"
echo ""

echo "üéâ D√âMONSTRATION TERMIN√âE AVEC SUCC√àS !"
echo "======================================"
echo ""
echo "‚ú® Kitchen ML Planner v2.0 est maintenant pr√™t √† l'emploi !"
echo ""
echo "üìñ Consultez README_v2.md pour la documentation compl√®te"
echo "üåê Lancez python start_web.py pour l'interface graphique"
echo "üöÄ Bonne g√©n√©ration de plans de cuisine !"
